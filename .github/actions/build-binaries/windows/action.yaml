name: "Build Windows Binary Artifacts"
description: "Build Windows specific pyinstaller binary artifacts"
inputs:
  package_name:
    description: "The name of the package"
    required: true
  artifacts_dir:
    description: "The directory to write artifacts you want to publish"
    required: true
  version:
    description: "The version to use for this artifact"

runs:
  using: "composite"
  steps:
    - name: Build binary
      shell: bash
      run: |
        echo "BINARY_BUILD_DIR=dist\algokit\" >> $GITHUB_ENV
        poetry run poe package_windows

    # TODO: NC - Do we want to run a codesign of the exe before packaging it?

    - name: Package binary artifact
      shell: pwsh
      run: |
        Set-Location -Path ${{ env.BINARY_BUILD_DIR }}
        tar -zcf ${{ inputs.artifacts_dir }}\${{ inputs.package_name }}.tar.gz *
        Set-Location -Path ..\..

    - name: Upload binary artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.package_name }}
        path: ${{ inputs.artifacts_dir }}\${{ inputs.package_name }}.tar.gz

    - name: Add build tools to path
      run: |
        echo "C:\Program Files (x86)\Windows Kits\10\bin\10.0.17763.0\x64" >> $GITHUB_PATH
      shell: bash

    - name: Build msix
      shell: pwsh
      run: |
        & .\scripts\create-winget-package.ps1 `
          -binaryDir ${{ env.BINARY_BUILD_DIR }} `
          -releaseVersion ${{ inputs.version }} `
          -outputFile ${{ inputs.artifacts_dir }}\${{ inputs.package_name }}-winget.msix

    # TODO: NC - Codesign winget package

    - name: Upload winget artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.package_name }}-winget
        path: ${{ inputs.artifacts_dir }}\${{ inputs.package_name }}-winget.msix
