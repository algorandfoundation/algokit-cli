name: "Setup, Build, and Test Pyinstaller Binaries"
description: "Build, test and upload binaries to GitHub releases and/or artifacts (ensure poetry dependencies are installed before running this action)"
inputs:
  production_release:
    description: "Flag to determine if this is a production release"
    required: true
  operating_system:
    description: "Operating system to set the correct binary path and extension"
    required: true
  architecture:
    description: "Architecture to set the correct binary path and extension"
    required: true

runs:
  using: "composite"
  steps:
    - name: Set release version
      shell: bash
      continue-on-error: true
      if: ${{ inputs.production_release == 'true' }}
      run: |
        echo "RELEASE_VERSION_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))" >> $GITHUB_ENV

    - name: Configure build environment
      shell: bash
      run: |
        artifacts_dir="${{ github.workspace }}${{ inputs.operating_system == 'Windows' && '\dist\artifacts' || '/dist/artifacts' }}"
        mkdir -p $artifacts_dir
        if [ -n "${RELEASE_VERSION_TAG}" ]; then
          release_version="${RELEASE_VERSION_TAG:1}"
          package_name_version="-${release_version}"
          echo "RELEASE_VERSION=${release_version}" >> $GITHUB_ENV
        fi
        package_name="algokit${package_name_version}-${{ inputs.operating_system }}_${{ inputs.architecture }}"
        echo "PACKAGE_NAME=`echo $package_name | tr '[:upper:]' '[:lower:]'`" >> $GITHUB_ENV
        echo "ARTIFACTS_DIR=${artifacts_dir}" >> $GITHUB_ENV

    # GitHub doesn't support expressions in the uses block
    - name: Build windows binary
      if: ${{ inputs.operating_system == 'Windows' }}
      uses: ./.github/actions/build-binaries/windows
      with:
        package_name: ${{ env.PACKAGE_NAME }}
        version: ${{ env.RELEASE_VERSION }}
        artifacts_dir: ${{ env.ARTIFACTS_DIR }}

    - name: Build linux binary
      if: ${{ inputs.operating_system == 'Linux' }}
      uses: ./.github/actions/build-binaries/linux
      with:
        package_name: ${{ env.PACKAGE_NAME }}
        version: ${{ env.RELEASE_VERSION }}
        artifacts_dir: ${{ env.ARTIFACTS_DIR }}

    - name: Build macOS binary
      if: ${{ inputs.operating_system == 'macOS' }}
      uses: ./.github/actions/build-binaries/macos
      with:
        package_name: ${{ env.PACKAGE_NAME }}
        version: ${{ env.RELEASE_VERSION }}
        artifacts_dir: ${{ env.ARTIFACTS_DIR }}

    # TODO: NC - Add to path and run like that instead and use artifacts_dir
    - name: Set TEST_CLI_PATH
      run: |
        test_cli_path="${{ github.workspace }}/dist/algokit/algokit"
        if [ "${{ inputs.operating_system }}" == "Windows" ]; then
          test_cli_path="${{ github.workspace }}\dist\algokit\algokit.exe"
        fi
        echo "TEST_CLI_PATH=${test_cli_path}" >> $GITHUB_ENV
      shell: bash

    - name: Run portability tests
      run: |
        echo "Executing: ${{ env.TEST_CLI_PATH }}"
        git config --global user.email "actions@github.com" && git config --global user.name "github-actions" 
        poetry run pytest tests/ -m pyinstaller_binary_tests --cli_path "${{ env.TEST_CLI_PATH }}" --log-cli-level=INFO
      shell: ${{ inputs.operating_system == 'Windows' && 'cmd' || 'bash' }}

    - name: Append artifacts to release
      if: ${{ inputs.production_release == 'true' }}
      uses: softprops/action-gh-release@v1
      with:
        files: |
          "${{ env.ARTIFACTS_DIR }}/*.*"
        tag_name: ${{ env.RELEASE_VERSION_TAG }}
        prerelease: ${{ contains(env.RELEASE_VERSION_TAG, 'beta') }}
