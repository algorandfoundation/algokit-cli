name: "Test PyInstaller Binaries"
description: "Test pyinstaller binaries"
inputs:
  package_name:
    description: "The name of the package to build and test"
    required: true
  operating_system:
    description: "Operating system to set the correct binary path and extension"
    required: true
  python_version:
    description: "Python version to use"
    required: true

runs:
  using: "composite"
  steps:
    - name: Download Artifact
      uses: actions/download-artifact@v2
      with:
        name: ${{ inputs.package_name }}-${{ inputs.operating_system }}-py${{ inputs.python_version }}

    - name: Run portability tests (Unix)
      if: ${{ inputs.operating_system != 'Windows' }}
      run: |
        echo "Artifact path: ${{ github.workspace }}/${{ inputs.package_name }}-${{ inputs.operating_system }}-py${{ inputs.python_version }}"
        CLI_PATH="${{ github.workspace }}/${{ inputs.package_name }}-${{ inputs.operating_system }}-py${{ inputs.python_version }}/${{ inputs.package_name }}"
        if [ "${{ inputs.operating_system }}" == "Windows" ]; then
          CLI_PATH+=".exe"
        else
          CLI_PATH="./$CLI_PATH"
        fi
        echo "Executing: $CLI_PATH"
        poetry run pytest tests/ -m pyinstaller_binary_tests --cli_path "$CLI_PATH" --log-cli-level=INFO
      shell: bash

    - name: Run portability tests (Windows)
      if: ${{ inputs.operating_system == 'Windows' }}
      run: |
        echo "Artifact path: ${{ github.workspace }}/${{ inputs.package_name }}-${{ inputs.operating_system }}-py${{ inputs.python_version }}"
        CLI_PATH="${{ github.workspace }}/${{ inputs.package_name }}-${{ inputs.operating_system }}-py${{ inputs.python_version }}/${{ inputs.package_name }}"
        if [ "${{ inputs.operating_system }}" == "Windows" ]; then
          CLI_PATH+=".exe"
        else
          CLI_PATH="./$CLI_PATH"
        fi
        echo "Executing: $CLI_PATH"
        poetry run pytest tests/ -m pyinstaller_binary_tests --cli_path "$CLI_PATH" --log-cli-level=INFO
      shell: cmd
